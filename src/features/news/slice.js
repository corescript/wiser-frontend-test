import { createSlice } from "@reduxjs/toolkit";
import * as actions from "./actions.js";

const initialState = {
  all: [],
  top: [],
  loading: false,
};

export const newsSlice = createSlice({
  name: "news",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(actions.fetchAllNews.pending, (state) => {
        state.loading = true;
      })
      .addCase(actions.fetchAllNews.fulfilled, (state, action) => {
        const { articles } = action.payload;
        state.all = [...articles];
        state.loading = false;
      })
      .addCase(actions.fetchAllNews.rejected, (state) => {
        state.loading = false;
      })
      .addCase(actions.fetchTopNews.pending, (state) => {
        state.loading = true;
      })
      .addCase(actions.fetchTopNews.fulfilled, (state, action) => {
        const { articles } = action.payload;
        state.top = [...articles];
        state.loading = false;
      })
      .addCase(actions.fetchTopNews.rejected, (state) => {
        state.loading = false;
      });
  },
});

export default newsSlice.reducer;
